updates on integration:

update ZhiMing Zhu:
I ran the motor to run a full square,
delay for 2000 at speed 150 makes a almost perfect 90 degree turn
the run was successful
will now run the motor with mapping algorithm and later run the motor with communication moduel
runMotor and Mapping is two of my completed subsystems
a new file will be uploaded later when motor and mapping is integrated into each other


Update Jesse Gomez (IN PROGRESS):
Currently working and adressing the fusion of the MPU6050 Accel/Gyro and ADA746 GPS
MPU6050 proving to be very diffficult to integrate
Might need to buy a new microcontroller as the Romeo BLE (ATMega328p) only has 32kb of program space

Update Noah Jean (2/18):
Controlling motor functions with app
Data lose proticol validated
Dimensions sent and parsed with app
Text to speech for when inputs are sent for validation
Error message for when dimensions exceed an area of 500 feet
Integrate app with sensors

Blitz update for Noah Jean:
I was able to integrate the mapping and bluetooth communication arduino code, 
so now the app can send dimensions and the arduino will now run the mapping proticol 
using the dimensions that were sent. There was one issue however. We needed a proticol 
to make sure that the user inputs from the phone app matches what was recieved from the 
arduino. I was not able to create this proticol during my time as blitz. I will have to
achieve this as soon as possible. 

Update Noah Jean (2/25):
I am now able to validate that the user inputs match was is received from the app. I was 
sending back what was recieved from the arduino back to the phone and trying to compare 
inside the app. The issue was that for some reason the phone was having an issue with data types.
I was able to fix this by making everything the same data type. Now that this is working, the 
mapping and phone app are successfully integrated. 

update ZhiMing Zhu:
motor can run in chain of command, all the motor function has been tested and works individually.
worked on getting GUI+bluetooth+motor to work, Noah only had trouble making something for user to input starting position.
then moved on to get the accelerometer+motor work with two microcontroller.
problems encountered when using only one microcontroller:
we tried two scripts, the first script required time for calibration and was highly inconsistent
the second script was stable, does not need calibration and is consistent with its result.
both script does not work with motor and is highly inconsistent with motor.
we suspect the problem was accelerometer getting disrupted from motor signals when its collecting data.

our first attempt to solve this problem was to run accelerometer and motor each in different mcu
so that the accelerometer signal does not get disrupted from the motor signal,
another reason to get the mcu was because sensor script was using 60% of the total space and
algorithm was using 30-40% so we're buying a second one with larger space before it run out.
I and Jesse decided to go with second script since it's consistent.
Testing result using second script: the motor was able to run by itselves with accelerometer,
the mcu was able to use the accelerometer data to perform decision making(if cases using accelerometer data)
but was still not able to perform decision making with motor function

our second attempt to solve this problem was to sync the I2C connecting between the two microcontrollers
and when motor mcu is not receiving data, we can do motor functions.
by separating the send and receive of the data between the two boards and the motor function
we were hoping that would solve our problem. But it was a failure.

update after blitz ZhiMing Zhu:
Noah was ready to integrate GUI+bluetooth+motor now, since I've already tested the motors combining
algorithm, combining the communication module from Noah into my mapping algorithm should work
we're now able take user input(length, width, and staring position), send that to the mcu through bluetooth
the mcu will run the mapping algorithm and perform the motor function.

things to validate and status:
invalid user inputs(letters, special charaters, area out of range)
connection lost
data loss over in transmission
check if data received is the correct user input
disconnecting while sending data
turning off the motor while it's still in the process of executing
multiple attempt of user inputs


